name: Build and Push Container Image with Podman

# Trigger the workflow on push to the main branch or on tags.
on:
  push:
    branches:
      - main
    tags:
      - 'v*.*.*'  # Trigger on new version tags like v1.0.0

# variables
env:
  # basic info
  REGISTRY_USER: ${{ github.actor }}
  REGISTRY_PASSWORD: ${{ github.token }}
  REGISTRY_URL: ghcr.io/${{ github.repository_owner }}
  DEFAULT_BRANCH: main
  # generic containers
  #GENERIC_CONTAINERS: |
  #  - name: cups_samsung
  #    path: ./cups-samsung
  #    file: Dockerfile
  #  - name: intel_gpu_tools
  #    path: ./tools
  #    file: Dockerfile.intel_gpu_top
  # development containers

# Define the job to build and push the container image
jobs:
  build_generic_containers:
    # specifies virtual machine platform, not the container image
    runs-on: ubuntu-latest
    strategy:
      # Define the containers here with key-value pairs
      matrix:
        container:
          - name: cups_samsung
            path: ./cups-samsung
            file: Dockerfile
          - name: intel_gpu_tools
            path: ./tools
            file: Dockerfile.intel_gpu_top
    steps:
      # Setup Podman to use container registry
      - name: Login Podman
        uses: redhat-actions/podman-login@v1
        with:
          username: ${{ github.actor }}
          password: ${{ secrets.PODMAN_TOKEN }}
          registry: ${{ env.REGISTRY_URL }}

      # Checkout the repository to get the files
      - name: Checkout latest code
        uses: actions/checkout@v3

      # Build Generic Containers from list
      - name: Build and push container
        run: |
          container_name=$(echo "${{ matrix.container.name }}")
          container_path=$(echo "${{ matrix.container.path }}")
          container_file=$(echo "${{ matrix.container.file }}")
          echo "Building container: $container_name"
          
          cd $container_path
          podman build \
            -f ${container_file} \
            -t ${{ env.REGISTRY_URL }}/${container_name}:v${GITHUB_SHA} .
          podman push ${{ env.REGISTRY_URL }}/${container_name}:v${GITHUB_SHA}

          # Publish latest stable build as latest tag
          if [[ "${GITHUB_REF}" == "refs/heads/${{ env.DEFAULT_BRANCH }}" ]]; then
            podman tag ${{ env.REGISTRY_URL }}/${container_name}:v${GITHUB_SHA} \
                       ${{ env.REGISTRY_URL }}/${container_name}:latest
            podman push ${{ env.REGISTRY_URL }}/${container_name}:latest
          fi
